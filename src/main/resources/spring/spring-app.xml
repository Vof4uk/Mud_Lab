<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--<import resource="spring-tools.xml"/>-->

    <context:annotation-config/>
    <context:component-scan base-package="ua.mykytenko.**.service"/>
    <context:component-scan base-package="ua.mykytenko.**.web"/>

    <beans profile="mock">
        <context:component-scan base-package="ua.mykytenko.**.repository.mock"/>
    </beans>

    <beans profile="postgres">
        <context:property-placeholder location="classpath:db/postgres.properties" system-properties-mode="OVERRIDE"/>
        <!--<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">-->
            <!--<property name="dataSourceProperties">-->
                <!--<props>-->
                    <!--<prop key="dataSource.url">"${database.url}"</prop>-->
                    <!--<prop key="dataSource.user">"${database.username}"</prop>-->
                    <!--<prop key="dataSource.password">"${database.password}"</prop>-->
                <!--</props>-->
            <!--</property>-->
            <!--<property name="dataSourceClassName" value="${database.driver}" />-->
        <!--</bean>-->

        <!--<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">-->
            <!--<constructor-arg ref="hikariConfig" />-->
        <!--</bean>-->
        <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
              p:driverClassName="${database.driver}"
              p:url="${database.url}"
              p:username="${database.username}"
              p:password="${database.password}"
        />
    </beans>

    <beans profile="jdbc">
        <!--<jdbc:initialize-database data-source="dataSource" enabled="true">-->
            <!--<jdbc:script location="classpath:db/initDB.sql"/>-->
            <!--<jdbc:script encoding="UTF-8" location="classpath:db/populateDB.sql"/>-->
        <!--</jdbc:initialize-database>-->
        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>
        <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>

        <context:component-scan base-package="ua.mykytenko.**.repository.jdbc"/>
        <context:property-placeholder location="classpath:db/db.properties" system-properties-mode="OVERRIDE"/>
    </beans>

    <beans profile="jpa">
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
              p:dataSource-ref="dataSource"
              p:packagesToScan="ua.mykytenko.**.entities">
            <!--p:persistenceUnitName="persistenceUnit">-->

            <property name="jpaPropertyMap">
                <map>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).FORMAT_SQL}" value="${hibernate.format_sql}"/>
                    <entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SQL_COMMENTS}" value="${hibernate.use_sql_comments}"/>
                    <!--<entry key="#{T(org.hibernate.cfg.AvailableSettings).HBM2DDL_AUTO}" value="${hibernate.hbm2ddl.auto}"/>-->

                    <!--<entry key="#{T(org.hibernate.cfg.AvailableSettings).CACHE_REGION_FACTORY}" value="org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory"/>-->
                    <!--<entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_SECOND_LEVEL_CACHE}" value="true"/>-->
                    <!--<entry key="#{T(org.hibernate.cfg.AvailableSettings).USE_QUERY_CACHE}" value="false"/> &lt;!&ndash;default&ndash;&gt;-->
                    <!--<entry key="#{T(org.hibernate.cache.ehcache.AbstractEhcacheRegionFactory).NET_SF_EHCACHE_CONFIGURATION_RESOURCE_NAME}" value="cache/ehcache.xml"/>-->

                </map>
            </property>

            <property name="jpaVendorAdapter">
                <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
                      p:showSql="${jpa.showSql}">
                </bean>
            </property>
        </bean>

        <tx:annotation-driven/>

        <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) -->
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
              p:entityManagerFactory-ref="entityManagerFactory"/>

        <context:component-scan base-package="ua.mykytenko.**.repository.jpa"/>
    </beans>

</beans>